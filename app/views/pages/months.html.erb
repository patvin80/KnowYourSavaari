<script type="application/javascript">
    // Helpers
    shuffle = function(o) {
        for ( var j, x, i = o.length; i; j = parseInt(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x)
            ;
        return o;
    };

    String.prototype.hashCode = function(){
        // See http://www.cse.yorku.ca/~oz/hash.html        
        var hash = 5381;
        for (i = 0; i < this.length; i++) {
            char = this.charCodeAt(i);
            hash = ((hash<<5)+hash) + char;
            hash = hash & hash; // Convert to 32bit integer
        }
        return hash;
    }

    Number.prototype.mod = function(n) {
        return ((this%n)+n)%n;
    }
    
</script>
<script type="text/javascript">
var winningIndex;
var hiddenMonth1, hiddenMonth2;
    // WHEEL!
    var wheel = {

        timerHandle : 0,
        timerDelay : 33,

        angleCurrent : 0,
        angleDelta : 0,

        size : 140,

        canvasContext : null,

        colors : [ '#ffff00', '#ffc700', '#ff9100', '#ff6301', '#ff0000', '#c6037e',
                   '#713697', '#444ea1', '#2772b2', '#0297ba', '#008e5b', '#8ac819' ],

        //segments : [ 'Andrew', 'Bob', 'Fred', 'John', 'China', 'Steve', 'Jim', 'Sally', 'Andrew', 'Bob', 'Fred', 'John', 'China', 'Steve', 'Jim'],
        segments : [],

        seg_colors : [], // Cache of segments to colors
        
        maxSpeed : Math.PI / 16,

        upTime : 1000, // How long to spin up for (in ms)
        downTime : 17000, // How long to slow down for (in ms)

        spinStart : 0,

        frames : 0,

        centerX : 160,
        centerY : 150,

        spin : function() {
            var segments = new Array();
             $.each(venues, function(key, item) { 
                segments.push( item );
            });

            wheel.segments = segments;
            // Start the wheel only if it's not already spinning
            if (wheel.timerHandle == 0) {
                wheel.spinStart = new Date().getTime();
                wheel.maxSpeed = Math.PI / (16 + Math.random()); // Randomly vary how hard the spin is
                wheel.frames = 0;
                wheel.sound.play();

                wheel.timerHandle = setInterval(wheel.onTimerTick, wheel.timerDelay);
            }
        },

        onTimerTick : function() {

            wheel.frames++;

            wheel.draw();

            var duration = (new Date().getTime() - wheel.spinStart);
            var progress = 0;
            var finished = false;

            if (duration < wheel.upTime) {
                progress = duration / wheel.upTime;
                wheel.angleDelta = wheel.maxSpeed
                        * Math.sin(progress * Math.PI / 2);
            } else {
                progress = duration / wheel.downTime;
                wheel.angleDelta = wheel.maxSpeed
                        * Math.sin(progress * Math.PI / 2 + Math.PI / 2);
                if (progress >= 1)
                    finished = true;
            }

            wheel.angleCurrent += wheel.angleDelta;
            while (wheel.angleCurrent >= Math.PI * 2)
                // Keep the angle in a reasonable range
                wheel.angleCurrent -= Math.PI * 2;

            if (finished) {
                clearInterval(wheel.timerHandle);
                wheel.timerHandle = 0;
                wheel.angleDelta = 0;

                $("#counter").html((wheel.frames / duration * 1000) + " FPS");

                wheel.drawWheelWithHideSegment(winningIndex);
                wheel.drawNeedle();
                var song = $("#selectedMonth").get(0);
                song.play();
                // var question1 = $("#question1").get(0);
                // question1.setAttribute("src","http://speechutil.com/convert/ogg?text='What month comes before " + wheel.segments[winningIndex] + "'");
                // question1.play();
                // var question2 = $("#question2").get(0);
                // question2.setAttribute("src","http://speechutil.com/convert/ogg?text='What month comes after " + wheel.segments[winningIndex] + "'");
                // question2.play();
                $("#showAnswer").show();
            }

            /*
            // Display RPM
            var rpm = (wheel.angleDelta * (1000 / wheel.timerDelay) * 60) / (Math.PI * 2);
            $("#counter").html( Math.round(rpm) + " RPM" );
             */
        },

        init : function(optionList) {
            try {
                wheel.initWheel();
                wheel.initAudio();
                wheel.initCanvas();
                wheel.draw();

                $.extend(wheel, optionList);

            } catch (exceptionData) {
                alert('Wheel is not loaded ' + exceptionData);
            }

        },

        initAudio : function() {
            var sound = document.createElement('audio');
            sound.setAttribute('src', 'wheel.mp3');
            wheel.sound = sound;
        },

        initCanvas : function() {
            var canvas = $('#wheel #canvas').get(0);

            if ($.browser.msie) {
                canvas = document.createElement('canvas');
                $(canvas).attr('width', 1000).attr('height', 600).attr('id', 'canvas').appendTo('.wheel');
                canvas = G_vmlCanvasManager.initElement(canvas);
            }

            canvas.addEventListener("click", wheel.spin, false);
            wheel.canvasContext = canvas.getContext("2d");
        },

        initWheel : function() {
            shuffle(wheel.colors);
        },

        // Called when segments have changed
        update : function() {
            // Ensure we start mid way on a item
            //var r = Math.floor(Math.random() * wheel.segments.length);
            var r = 0;
            wheel.angleCurrent = ((r + 0.5) / wheel.segments.length) * Math.PI * 2;
            var segments = wheel.segments;
            var len      = segments.length;
            var colors   = wheel.colors;
            var colorLen = colors.length;

            // Generate a color cache (so we have consistant coloring)
            var seg_color = new Array();
            for (var i = 0; i < len; i++)
                seg_color.push( colors [ segments[i].hashCode().mod(colorLen) ] );
            seg_color[10] = colors[2];
            wheel.seg_color = seg_color;

            wheel.draw();
        },

        draw : function() {
            wheel.clear();
            wheel.drawWheel();
            wheel.drawNeedle();
        },

        clear : function() {
            var ctx = wheel.canvasContext;
            ctx.clearRect(0, 0, 1000, 800);
        },

        drawNeedle : function() {
            var ctx = wheel.canvasContext;
            var centerX = wheel.centerX;
            var centerY = wheel.centerY;
            var size = wheel.size;

            ctx.lineWidth = 7;
            ctx.strokeStyle = '#000000';
            ctx.fillStyle = '#FF0066';

            ctx.beginPath();

            ctx.moveTo(centerX + size - 15, centerY);
            ctx.lineTo(centerX + size + 20, centerY - 15);
            ctx.lineTo(centerX + size + 20, centerY + 15);
            ctx.closePath();

            ctx.stroke();
            ctx.fill();
            // Which segment is being pointed to?
            var i = wheel.segments.length - Math.floor(((wheel.angleCurrent) / (Math.PI * 2)) * wheel.segments.length) - 1;

            // Now draw the winning name
            ctx.textAlign = "left";
            ctx.textBaseline = "middle";
            ctx.fillStyle = '#FF0066';
            ctx.font = "2em Arial";
            //ctx.fillText(wheel.segments[i], centerX + size + 25, centerY);
            winningIndex = i;
            var song = $("#selectedMonth").get(0);
            song.setAttribute("src","http://speechutil.com/convert/ogg?text='What month comes before and after " + wheel.segments[winningIndex] + "'");

        },

        drawSegment : function(key, lastAngle, angle) {
            var ctx = wheel.canvasContext;
            var centerX = wheel.centerX;
            var centerY = wheel.centerY;
            var size = wheel.size;

            var segments = wheel.segments;
            var len = wheel.segments.length;
            var colors = wheel.seg_color;

            var value = segments[key];
            
            ctx.save();
            ctx.beginPath();

            // Start in the centre
            ctx.moveTo(centerX, centerY);
            ctx.arc(centerX, centerY, size, lastAngle, angle, false); // Draw a arc around the edge
            ctx.lineTo(centerX, centerY); // Now draw a line back to the centre

            // Clip anything that follows to this area
            //ctx.clip(); // It would be best to clip, but we can double performance without it
            ctx.closePath();

            ctx.fillStyle = colors[key];
            ctx.fill();
            ctx.stroke();

            // Now draw the text
            ctx.save(); // The save ensures this works on Android devices
            ctx.translate(centerX, centerY);
            ctx.rotate((lastAngle + angle) / 2);

            ctx.fillStyle = '#000000';
            ctx.fillText(value.substr(0, 20), size / 2 + 20, 0);

            ctx.restore();

            ctx.restore();

        },

        drawWheelWithHideSegment : function(key) {
            var ctx = wheel.canvasContext;

            var angleCurrent = wheel.angleCurrent;
            var lastAngle    = angleCurrent;
            if (key == 11)
            {   
                hiddenMonth1 = wheel.segments[key-1];
                hiddenMonth2 = wheel.segments[0];
                wheel.segments[0] = "";
                wheel.segments[key-1] = "";
            }
            else
            {
                hiddenMonth1 = wheel.segments[key-1];
                hiddenMonth2 = wheel.segments[key+1];
                wheel.segments[key-1] = "";
                wheel.segments[key+1] = "";
            }            

            var segments  = wheel.segments;
            var len       = wheel.segments.length;
            var colors    = wheel.colors;
            var colorsLen = wheel.colors.length;

            var centerX = wheel.centerX;
            var centerY = wheel.centerY;
            var size    = wheel.size;

            var PI2 = Math.PI * 2;

            ctx.lineWidth    = 1;
            ctx.strokeStyle  = '#000000';
            ctx.textBaseline = "middle";
            ctx.textAlign    = "center";
            ctx.font         = "1.0em Arial";

            for (var i = 1; i <= len; i++) {
                var angle = PI2 * (i / len) + angleCurrent;
                wheel.drawSegment(i - 1, lastAngle, angle);
                lastAngle = angle;
            }
            // Draw a center circle
            ctx.beginPath();
            ctx.arc(centerX, centerY, 20, 0, PI2, false);
            ctx.closePath();

            ctx.fillStyle   = '#ffffff';
            ctx.strokeStyle = '#000000';
            ctx.fill();
            ctx.stroke();

            // Draw outer circle
            ctx.beginPath();
            ctx.arc(centerX, centerY, size, 0, PI2, false);
            ctx.closePath();

            ctx.lineWidth   = 3;
            ctx.strokeStyle = '#000000';
            ctx.stroke();
        },

        drawWheelWithShowSegment : function(key) {
            var ctx = wheel.canvasContext;

            var angleCurrent = wheel.angleCurrent;
            var lastAngle    = angleCurrent;
            if (key == 11)
            {   
                wheel.segments[winningIndex-1] = hiddenMonth1;
                wheel.segments[0] = hiddenMonth2;
            }
            else
            {
                wheel.segments[winningIndex-1] = hiddenMonth1;
                wheel.segments[winningIndex+1] = hiddenMonth2;
            }            



            var segments  = wheel.segments;
            var len       = wheel.segments.length;
            var colors    = wheel.colors;
            var colorsLen = wheel.colors.length;

            var centerX = wheel.centerX;
            var centerY = wheel.centerY;
            var size    = wheel.size;

            var PI2 = Math.PI * 2;

            ctx.lineWidth    = 1;
            ctx.strokeStyle  = '#000000';
            ctx.textBaseline = "middle";
            ctx.textAlign    = "center";
            ctx.font         = "1.0em Arial";

            for (var i = 1; i <= len; i++) {
                var angle = PI2 * (i / len) + angleCurrent;
                wheel.drawSegment(i - 1, lastAngle, angle);
                lastAngle = angle;
            }
            // Draw a center circle
            ctx.beginPath();
            ctx.arc(centerX, centerY, 20, 0, PI2, false);
            ctx.closePath();

            ctx.fillStyle   = '#ffffff';
            ctx.strokeStyle = '#000000';
            ctx.fill();
            ctx.stroke();

            // Draw outer circle
            ctx.beginPath();
            ctx.arc(centerX, centerY, size, 0, PI2, false);
            ctx.closePath();

            ctx.lineWidth   = 3;
            ctx.strokeStyle = '#000000';
            ctx.stroke();
        },


        drawWheel : function() {
            var ctx = wheel.canvasContext;

            var angleCurrent = wheel.angleCurrent;
            var lastAngle    = angleCurrent;

            var segments  = wheel.segments;
            var len       = wheel.segments.length;
            var colors    = wheel.colors;
            var colorsLen = wheel.colors.length;

            var centerX = wheel.centerX;
            var centerY = wheel.centerY;
            var size    = wheel.size;

            var PI2 = Math.PI * 2;

            ctx.lineWidth    = 1;
            ctx.strokeStyle  = '#000000';
            ctx.textBaseline = "middle";
            ctx.textAlign    = "center";
            ctx.font         = "1.0em Arial";

            for (var i = 1; i <= len; i++) {
                var angle = PI2 * (i / len) + angleCurrent;
                wheel.drawSegment(i - 1, lastAngle, angle);
                lastAngle = angle;
            }
            // Draw a center circle
            ctx.beginPath();
            ctx.arc(centerX, centerY, 20, 0, PI2, false);
            ctx.closePath();

            ctx.fillStyle   = '#ffffff';
            ctx.strokeStyle = '#000000';
            ctx.fill();
            ctx.stroke();

            // Draw outer circle
            ctx.beginPath();
            ctx.arc(centerX, centerY, size, 0, PI2, false);
            ctx.closePath();

            ctx.lineWidth   = 10;
            ctx.strokeStyle = '#000000';
            ctx.stroke();
        },
    }

    window.onload = function() {

            venues = {
        "1"  : "January",
        "2"  : "February",
        "3"  : "March",
        "4"  : "April",
        "5"  : "May",
        "6"  : "June",
        "7"  : "July",
        "8"  : "August",
        "9"  : "September",
        "10" : "October",
        "11" : "November",
        "12" : "December"
    };

    var wheelsize = ($(".middle-content").width() - 45 )/ 2;
        wheel.init({
            size : wheelsize,
            centerX : $(".middle-content").width() / 2,
            centerY : $(".middle-content").height() / 2 - 40,
        });

        var segments = new Array();
         $.each(venues, function(key, item) { 
            segments.push( item );
        });

        wheel.segments = segments;
        wheel.update();

        // Hide the address bar (for mobile devices)!
        setTimeout(function() {
            window.scrollTo(0, 1);
        }, 0);
    }
    </script>
<script type="text/javascript">
    jQuery(function() {
        // $("#header-wrapper").hide();
        // $("#mobileUI-site-titlebar").hide();
        $("#mobileUI-site-title").text("Time Teacher");
        $(".mobileUI-site-nav-link").each(function(){
            if ($(this).text() == "Homepage" || $(this).text() == "About"){
                $(this).hide();
            }
        });
        $("h1").hide();
        $("h3").hide();
        $("#showAnswer").hide();
          $("#showAnswer").click(function (){
                wheel.drawWheelWithShowSegment();
                wheel.drawNeedle();
                $(this).hide();
        });
      });
</script>

    <div id="main">
      <div class="5grid-layout">
        <div class="row main-row">
          <div class="6u ">
            <section class="middle-content">
              <h2 style="text-align:center;font-size:40px;">Month</h2>
                <audio id="selectedMonth" src=""></audio>                
                <div id="wheel">
                    <canvas id="canvas" width="600" height="300"></canvas>
                </div>
                <div id="play" style="text-align:center;" >
                  <h3 style="font-size:30px;"></h3> <br/>
                  <input type='button' class="button" id="showAnswer"  value="Answer" />
                </div>
            </section>
          </div>
        </div>
      </div>
    </div>